<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.bangbang.dao.GroupUserDao" >
    <resultMap id="groupUser" type="ytb.bangbang.model.Group_UserModel">
        <id property="Group_user_id"  column="group_user_id"/>
        <result property="GroupId" column="group_id"/>
        <result property="UserId" column="user_id"/>
        <result property="GroupUserType" column="group_user_type"/>
        <result property="CreateTime" column="create_time"/>
    </resultMap>
    <!--获取组员信息-->
    <select id="getGroupUserByGroupId" resultMap="groupUser" >
        SELECT * FROM group_user WHERE group_ID=#{groupId};
    </select>

    <!--群聊-显示群人员-->
    <select id="getGroupUsersInfo" resultMap="getGroupUsersInfoMap">
        SELECT
               a.user_id,
               a.nick_name,
               b.user_head,
               IF(b.is_online,'online','hide') AS status,
               b.user_sign,
               g.group_user_type
          from group_user g
          LEFT  JOIN ytb_user.user_info a on g.user_id=a.user_id
          LEFT JOIN  ytb_user.user_login b on b.user_id = a.user_id
          where g.group_id=#{groupId}
    </select>

    <resultMap id="getGroupUsersInfoMap" type="ytb.bangbang.model.GroupUserInfo">
        <id column="user_id" property="id"/>
        <result column="nick_name" property="username"/>
        <result column="user_head" property="avatar"/>
        <result column="status" property="status"/>
        <result column="user_sign" property="sign"/>
        <result column="group_user_type" property="groupUserType"/>
    </resultMap>

    <!--判断该成员是否在群组中-->
    <select id="IsExistence" resultType="int" >
        SELECT COUNT(*) FROM group_user WHERE user_ID=#{userId} AND group_ID=#{groupId};
    </select>

    <select id="selGroupById" resultMap="selGroupByIdMap">
        SELECT u.group_user_id as 'Group_user_id',u.user_ID as 'UserId',u.group_ID as 'GroupId',u.group_User_Type as 'GroupUserType',
        g.group_Name as 'GroupName',g.create_Time as 'CreateTime',g.group_Icon as 'GroupIcon',g.group_Type as 'GroupType'
        from group_user u
        LEFT JOIN group_info g on u.group_ID=g.group_id
        where u.user_ID=#{userId}
    </select>

    <resultMap id="selGroupByIdMap" type="ytb.bangbang.model.Group_UserModel">
        <id property="Group_user_id" column="Group_user_id"/>
        <result property="UserId" column="UserId"/>
        <result property="GroupId" column="GroupId"/>
        <result property="GroupUserType" column="GroupUserType"/>
        <association property="groupInfoModel" javaType="ytb.bangbang.model.Group_InfoModel">
            <result property="GroupName" column="GroupName"/>
            <result property="CreateTime" column="CreateTime"/>
            <result property="GroupIcon" column="GroupIcon"/>
            <result property="GroupType" column="GroupType"/>
        </association>
    </resultMap>

    <select id="findGroupOwnerId" resultType="int">
        SELECT user_ID from group_user where group_ID=#{groupId} and group_User_Type=1
    </select>

    <insert id="addUserToGroup">
        INSERT INTO group_user(user_ID,group_ID,group_User_Type,create_Time) VALUES (#{userId},#{groupId},#{groupUserType},now());
    </insert>
    
    <!-- 添加群组成员-->
    <insert id="AddRecord">
        INSERT INTO  group_user(group_ID,user_ID,create_Time) VALUES (#{groupId},#{userId},now())
    </insert>
    
    <!--创建群时添加成员-->
    <insert id="addMember" parameterType="ytb.bangbang.model.GroupUser">
      INSERT into group_user(user_id,group_id,create_time,group_user_type,group_type_id)
      VALUES(#{userId},#{groupId},now(),#{groupUserType},#{groupTypeId});
    </insert>
    
    <insert id="addRecordu" useGeneratedKeys="true" keyProperty="groupUserId" parameterType="ytb.bangbang.model.GroupUser">
        INSERT INTO  group_user(user_id,group_id,create_time,group_user_type,group_type_id) VALUES
        (#{userId},#{groupId},now(),#{groupUserType},#{groupTypeId});
    </insert>
    
    <!--设置成员身份-->
    <update id="SetUserType">
        UPDATE group_user SET group_User_Type=#{type} WHERE user_ID=#{userId} AND group_ID=#{groupId};
    </update>
    <!-- 获取成员身份-->
    <select id="GetGroupUserType" resultType="Integer">
        SELECT group_User_Type FROM group_user WHERE group_ID=#{groupId} AND user_ID=#{userId}
    </select>
    <!--删除所有成员-->
    <delete id="DeleteRecord">
        DELETE  FROM  group_user WHERE group_ID=#{groupId}
    </delete>
    <!--删除单个成员-->
    <delete id="DeleteUser">
        DELETE  FROM  group_user WHERE group_ID=#{groupId} AND user_ID=#{userId}
    </delete>
    <update id="removeToDefaltType">
        UPDATE group_user set group_type_id=#{defaltTypeId} where user_id=#{userId} and group_type_id=#{groupTypeId};
    </update>
</mapper>