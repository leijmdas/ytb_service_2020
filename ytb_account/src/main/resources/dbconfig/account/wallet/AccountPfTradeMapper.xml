<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.account.wallet.dao.AccountPfTradeMapper">
  <resultMap id="BaseResultMap" type="ytb.account.wallet.model.AccountPfTrade">
    <id column="trade_id" jdbcType="INTEGER" property="tradeId" />
    <result column="term_id" jdbcType="SMALLINT" property="termId" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="ac_id" jdbcType="INTEGER" property="acId" />
    <result column="to_pf_inner_id" jdbcType="INTEGER" property="toPfInnerId" />
    <result column="trade_no_pre" jdbcType="VARCHAR" property="tradeNoPre" />
    <result column="trade_type" jdbcType="INTEGER" property="tradeType" />
    <result column="trade_subtype" jdbcType="SMALLINT" property="tradeSubtype" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="retry_times" jdbcType="TINYINT" property="retryTimes" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="cal_flag" jdbcType="BIT" property="calFlag" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="progress_id" jdbcType="INTEGER" property="progressId" />
    <result column="out_id" jdbcType="INTEGER" property="outId" />
    <result column="payment_balance" jdbcType="DECIMAL" property="paymentBalance" />
    <result column="refund_balance" jdbcType="DECIMAL" property="refundBalance" />
    <result column="talk_id" jdbcType="INTEGER" property="talkId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    trade_id, term_id, trade_no, project_id, ac_id, to_pf_inner_id, trade_no_pre, trade_type, 
    trade_subtype, balance, status, retry_times, create_by, create_time, cal_flag, user_id, 
    company_id, progress_id, out_id, payment_balance, refund_balance,talk_id
  </sql>
  <select id="selectByExample" parameterType="ytb.account.wallet.model.AccountPfTradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_pf_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_pf_trade
    where trade_id = #{tradeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_pf_trade
    where trade_id = #{tradeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ytb.account.wallet.model.AccountPfTradeExample">
    delete from account_pf_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ytb.account.wallet.model.AccountPfTrade">
    insert into account_pf_trade (trade_id, term_id, trade_no, 
      project_id, ac_id, to_pf_inner_id, 
      trade_no_pre, trade_type, trade_subtype, 
      balance, status, retry_times, 
      create_by, create_time, cal_flag, 
      user_id, company_id, progress_id, 
      out_id, payment_balance, refund_balance
      )
    values (#{tradeId,jdbcType=INTEGER}, #{termId,jdbcType=SMALLINT}, #{tradeNo,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=INTEGER}, #{acId,jdbcType=INTEGER}, #{toPfInnerId,jdbcType=INTEGER}, 
      #{tradeNoPre,jdbcType=VARCHAR}, #{tradeType,jdbcType=INTEGER}, #{tradeSubtype,jdbcType=SMALLINT}, 
      #{balance,jdbcType=DECIMAL}, #{status,jdbcType=SMALLINT}, #{retryTimes,jdbcType=TINYINT}, 
      #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{calFlag,jdbcType=BIT}, 
      #{userId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{progressId,jdbcType=INTEGER}, 
      #{outId,jdbcType=INTEGER}, #{paymentBalance,jdbcType=DECIMAL}, #{refundBalance,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="ytb.account.wallet.model.AccountPfTrade" useGeneratedKeys="true"
          keyProperty="tradeId" keyColumn="trade_id">
    insert into account_pf_trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="termId != null">
        term_id,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="acId != null">
        ac_id,
      </if>
      <if test="toPfInnerId != null">
        to_pf_inner_id,
      </if>
      <if test="tradeNoPre != null">
        trade_no_pre,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
      <if test="tradeSubtype != null">
        trade_subtype,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="retryTimes != null">
        retry_times,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="calFlag != null">
        cal_flag,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="progressId != null">
        progress_id,
      </if>
      <if test="outId != null">
        out_id,
      </if>
      <if test="paymentBalance != null">
        payment_balance,
      </if>
      <if test="refundBalance != null">
        refund_balance,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeId != null">
        #{tradeId,jdbcType=INTEGER},
      </if>
      <if test="termId != null">
        #{termId,jdbcType=SMALLINT},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="acId != null">
        #{acId,jdbcType=INTEGER},
      </if>
      <if test="toPfInnerId != null">
        #{toPfInnerId,jdbcType=INTEGER},
      </if>
      <if test="tradeNoPre != null">
        #{tradeNoPre,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="tradeSubtype != null">
        #{tradeSubtype,jdbcType=SMALLINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="retryTimes != null">
        #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calFlag != null">
        #{calFlag,jdbcType=BIT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="progressId != null">
        #{progressId,jdbcType=INTEGER},
      </if>
      <if test="outId != null">
        #{outId,jdbcType=INTEGER},
      </if>
      <if test="paymentBalance != null">
        #{paymentBalance,jdbcType=DECIMAL},
      </if>
      <if test="refundBalance != null">
        #{refundBalance,jdbcType=DECIMAL},
      </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="ytb.account.wallet.model.AccountPfTradeExample" resultType="java.lang.Long">
    select count(*) from account_pf_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_pf_trade
    <set>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=INTEGER},
      </if>
      <if test="record.termId != null">
        term_id = #{record.termId,jdbcType=SMALLINT},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.acId != null">
        ac_id = #{record.acId,jdbcType=INTEGER},
      </if>
      <if test="record.toPfInnerId != null">
        to_pf_inner_id = #{record.toPfInnerId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNoPre != null">
        trade_no_pre = #{record.tradeNoPre,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null">
        trade_type = #{record.tradeType,jdbcType=INTEGER},
      </if>
      <if test="record.tradeSubtype != null">
        trade_subtype = #{record.tradeSubtype,jdbcType=SMALLINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.retryTimes != null">
        retry_times = #{record.retryTimes,jdbcType=TINYINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.calFlag != null">
        cal_flag = #{record.calFlag,jdbcType=BIT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.progressId != null">
        progress_id = #{record.progressId,jdbcType=INTEGER},
      </if>
      <if test="record.outId != null">
        out_id = #{record.outId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentBalance != null">
        payment_balance = #{record.paymentBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.refundBalance != null">
        refund_balance = #{record.refundBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.talkId != null">
        talk_id = #{record.talkId,jdbcType=INTEGER}
      </if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_pf_trade
    set trade_id = #{record.tradeId,jdbcType=INTEGER},
      term_id = #{record.termId,jdbcType=SMALLINT},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=INTEGER},
      ac_id = #{record.acId,jdbcType=INTEGER},
      to_pf_inner_id = #{record.toPfInnerId,jdbcType=INTEGER},
      trade_no_pre = #{record.tradeNoPre,jdbcType=VARCHAR},
      trade_type = #{record.tradeType,jdbcType=INTEGER},
      trade_subtype = #{record.tradeSubtype,jdbcType=SMALLINT},
      balance = #{record.balance,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=SMALLINT},
      retry_times = #{record.retryTimes,jdbcType=TINYINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      cal_flag = #{record.calFlag,jdbcType=BIT},
      user_id = #{record.userId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      progress_id = #{record.progressId,jdbcType=INTEGER},
      out_id = #{record.outId,jdbcType=INTEGER},
      payment_balance = #{record.paymentBalance,jdbcType=DECIMAL},
      refund_balance = #{record.refundBalance,jdbcType=DECIMAL},
      talk_id= #{record.talkId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ytb.account.wallet.model.AccountPfTrade">
    update account_pf_trade
    <set>
      <if test="termId != null">
        term_id = #{termId,jdbcType=SMALLINT},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="acId != null">
        ac_id = #{acId,jdbcType=INTEGER},
      </if>
      <if test="toPfInnerId != null">
        to_pf_inner_id = #{toPfInnerId,jdbcType=INTEGER},
      </if>
      <if test="tradeNoPre != null">
        trade_no_pre = #{tradeNoPre,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="tradeSubtype != null">
        trade_subtype = #{tradeSubtype,jdbcType=SMALLINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="retryTimes != null">
        retry_times = #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calFlag != null">
        cal_flag = #{calFlag,jdbcType=BIT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="progressId != null">
        progress_id = #{progressId,jdbcType=INTEGER},
      </if>
      <if test="outId != null">
        out_id = #{outId,jdbcType=INTEGER},
      </if>
      <if test="paymentBalance != null">
        payment_balance = #{paymentBalance,jdbcType=DECIMAL},
      </if>
      <if test="refundBalance != null">
        refund_balance = #{refundBalance,jdbcType=DECIMAL},
      </if>
      <if test="talkId != null">
        talk_id = #{talkId,jdbcType=INTEGER},
      </if>
    </set>
    where trade_id = #{tradeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ytb.account.wallet.model.AccountPfTrade">
    update account_pf_trade
    set term_id = #{termId,jdbcType=SMALLINT},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=INTEGER},
      ac_id = #{acId,jdbcType=INTEGER},
      to_pf_inner_id = #{toPfInnerId,jdbcType=INTEGER},
      trade_no_pre = #{tradeNoPre,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=INTEGER},
      trade_subtype = #{tradeSubtype,jdbcType=SMALLINT},
      balance = #{balance,jdbcType=DECIMAL},
      status = #{status,jdbcType=SMALLINT},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      cal_flag = #{calFlag,jdbcType=BIT},
      user_id = #{userId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      progress_id = #{progressId,jdbcType=INTEGER},
      out_id = #{outId,jdbcType=INTEGER},
      payment_balance = #{paymentBalance,jdbcType=DECIMAL},
      refund_balance = #{refundBalance,jdbcType=DECIMAL},
      talk_id = #{talkId,jdbcType=INTEGER}
    where trade_id = #{tradeId,jdbcType=INTEGER}
  </update>
</mapper>