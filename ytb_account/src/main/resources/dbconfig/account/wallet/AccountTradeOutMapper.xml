<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.account.wallet.dao.AccountTradeOutMapper">
  <resultMap id="BaseResultMap" type="ytb.account.wallet.model.AccountTradeOut">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_model" jdbcType="VARCHAR" property="payModel" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="passback_params" jdbcType="VARCHAR" property="passbackParams" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="qr_code" jdbcType="VARCHAR" property="qrCode" />
    <result column="order_state" jdbcType="VARCHAR" property="orderState" />
    <result column="buyer_id" jdbcType="VARCHAR" property="buyerId" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="gmt_create" jdbcType="DATE" property="gmtCreate" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_model, total_amount, passback_params, subject, body, out_trade_no, qr_code, 
    order_state, buyer_id, seller_id, gmt_create, trade_id
  </sql>
  <select id="selectByExample" parameterType="ytb.account.wallet.model.AccountTradeOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_trade_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_trade_out
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_trade_out
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ytb.account.wallet.model.AccountTradeOutExample">
    delete from account_trade_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ytb.account.wallet.model.AccountTradeOut">
    insert into account_trade_out (id, pay_model, total_amount, 
      passback_params, subject, body, 
      out_trade_no, qr_code, order_state, 
      buyer_id, seller_id, gmt_create, 
      trade_id)
    values (#{id,jdbcType=INTEGER}, #{payModel,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DECIMAL}, 
      #{passbackParams,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, 
      #{outTradeNo,jdbcType=VARCHAR}, #{qrCode,jdbcType=VARCHAR}, #{orderState,jdbcType=VARCHAR}, 
      #{buyerId,jdbcType=VARCHAR}, #{sellerId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=DATE}, 
      #{tradeId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ytb.account.wallet.model.AccountTradeOut">
    insert into account_trade_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payModel != null">
        pay_model,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="passbackParams != null">
        passback_params,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="qrCode != null">
        qr_code,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payModel != null">
        #{payModel,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="passbackParams != null">
        #{passbackParams,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="qrCode != null">
        #{qrCode,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=DATE},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ytb.account.wallet.model.AccountTradeOutExample" resultType="java.lang.Long">
    select count(*) from account_trade_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_trade_out
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payModel != null">
        pay_model = #{record.payModel,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.passbackParams != null">
        passback_params = #{record.passbackParams,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.qrCode != null">
        qr_code = #{record.qrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderState != null">
        order_state = #{record.orderState,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerId != null">
        buyer_id = #{record.buyerId,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=DATE},
      </if>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_trade_out
    set id = #{record.id,jdbcType=INTEGER},
      pay_model = #{record.payModel,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      passback_params = #{record.passbackParams,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      qr_code = #{record.qrCode,jdbcType=VARCHAR},
      order_state = #{record.orderState,jdbcType=VARCHAR},
      buyer_id = #{record.buyerId,jdbcType=VARCHAR},
      seller_id = #{record.sellerId,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=DATE},
      trade_id = #{record.tradeId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ytb.account.wallet.model.AccountTradeOut">
    update account_trade_out
    <set>
      <if test="payModel != null">
        pay_model = #{payModel,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="passbackParams != null">
        passback_params = #{passbackParams,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="qrCode != null">
        qr_code = #{qrCode,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="buyerId != null">
        buyer_id = #{buyerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=DATE},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ytb.account.wallet.model.AccountTradeOut">
    update account_trade_out
    set pay_model = #{payModel,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      passback_params = #{passbackParams,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      qr_code = #{qrCode,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=VARCHAR},
      buyer_id = #{buyerId,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=DATE},
      trade_id = #{tradeId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>