<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.account.wallet.dao.AccountPfOutMapper">
    <resultMap id="BaseResultMap" type="ytb.account.wallet.model.AccountPfOut">
        <id column="pf_out_id" jdbcType="INTEGER" property="pfOutId"/>
        <result column="account_type" jdbcType="TINYINT" property="accountType"/>
        <result column="is_agent" jdbcType="TINYINT" property="isAgent"/>
        <result column="account_no" jdbcType="VARCHAR" property="accountNo"/>
        <result column="mobile_no" jdbcType="VARCHAR" property="mobileNo"/>
        <result column="bank_name" jdbcType="VARCHAR" property="bankName"/>
        <result column="branch_name" jdbcType="VARCHAR" property="branchName"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    pf_out_id, account_type, is_agent, account_no, mobile_no, bank_name, branch_name, 
    balance, status, create_time
  </sql>
    <select id="selectByExample" parameterType="ytb.account.wallet.model.AccountPfOutExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from account_pf_out
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from account_pf_out
        where pf_out_id = #{pfOutId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_pf_out
    where pf_out_id = #{pfOutId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="ytb.account.wallet.model.AccountPfOutExample">
        delete from account_pf_out
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="ytb.account.wallet.model.AccountPfOut">
    insert into account_pf_out (pf_out_id, account_type, is_agent, 
      account_no, mobile_no, bank_name, 
      branch_name, balance, status, 
      create_time)
    values (#{pfOutId,jdbcType=INTEGER}, #{accountType,jdbcType=TINYINT}, #{isAgent,jdbcType=TINYINT}, 
      #{accountNo,jdbcType=VARCHAR}, #{mobileNo,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{branchName,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="ytb.account.wallet.model.AccountPfOut" useGeneratedKeys="true"
            keyProperty="pfOutId" keyColumn="pf_out_id">
        insert into account_pf_out
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pfOutId != null">
                pf_out_id,
            </if>
            <if test="accountType != null">
                account_type,
            </if>
            <if test="isAgent != null">
                is_agent,
            </if>
            <if test="accountNo != null">
                account_no,
            </if>
            <if test="mobileNo != null">
                mobile_no,
            </if>
            <if test="bankName != null">
                bank_name,
            </if>
            <if test="branchName != null">
                branch_name,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pfOutId != null">
                #{pfOutId,jdbcType=INTEGER},
            </if>
            <if test="accountType != null">
                #{accountType,jdbcType=TINYINT},
            </if>
            <if test="isAgent != null">
                #{isAgent,jdbcType=TINYINT},
            </if>
            <if test="accountNo != null">
                #{accountNo,jdbcType=VARCHAR},
            </if>
            <if test="mobileNo != null">
                #{mobileNo,jdbcType=VARCHAR},
            </if>
            <if test="bankName != null">
                #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="branchName != null">
                #{branchName,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="ytb.account.wallet.model.AccountPfOutExample" resultType="java.lang.Long">
        select count(*) from account_pf_out
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update account_pf_out
        <set>
            <if test="record.pfOutId != null">
                pf_out_id = #{record.pfOutId,jdbcType=INTEGER},
            </if>
            <if test="record.accountType != null">
                account_type = #{record.accountType,jdbcType=TINYINT},
            </if>
            <if test="record.isAgent != null">
                is_agent = #{record.isAgent,jdbcType=TINYINT},
            </if>
            <if test="record.accountNo != null">
                account_no = #{record.accountNo,jdbcType=VARCHAR},
            </if>
            <if test="record.mobileNo != null">
                mobile_no = #{record.mobileNo,jdbcType=VARCHAR},
            </if>
            <if test="record.bankName != null">
                bank_name = #{record.bankName,jdbcType=VARCHAR},
            </if>
            <if test="record.branchName != null">
                branch_name = #{record.branchName,jdbcType=VARCHAR},
            </if>
            <if test="record.balance != null">
                balance = #{record.balance,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update account_pf_out
        set pf_out_id = #{record.pfOutId,jdbcType=INTEGER},
        account_type = #{record.accountType,jdbcType=TINYINT},
        is_agent = #{record.isAgent,jdbcType=TINYINT},
        account_no = #{record.accountNo,jdbcType=VARCHAR},
        mobile_no = #{record.mobileNo,jdbcType=VARCHAR},
        bank_name = #{record.bankName,jdbcType=VARCHAR},
        branch_name = #{record.branchName,jdbcType=VARCHAR},
        balance = #{record.balance,jdbcType=DECIMAL},
        status = #{record.status,jdbcType=TINYINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="ytb.account.wallet.model.AccountPfOut">
        update account_pf_out
        <set>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=TINYINT},
            </if>
            <if test="isAgent != null">
                is_agent = #{isAgent,jdbcType=TINYINT},
            </if>
            <if test="accountNo != null">
                account_no = #{accountNo,jdbcType=VARCHAR},
            </if>
            <if test="mobileNo != null">
                mobile_no = #{mobileNo,jdbcType=VARCHAR},
            </if>
            <if test="bankName != null">
                bank_name = #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="branchName != null">
                branch_name = #{branchName,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where pf_out_id = #{pfOutId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="ytb.account.wallet.model.AccountPfOut">
    update account_pf_out
    set account_type = #{accountType,jdbcType=TINYINT},
      is_agent = #{isAgent,jdbcType=TINYINT},
      account_no = #{accountNo,jdbcType=VARCHAR},
      mobile_no = #{mobileNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where pf_out_id = #{pfOutId,jdbcType=INTEGER}
  </update>
</mapper>