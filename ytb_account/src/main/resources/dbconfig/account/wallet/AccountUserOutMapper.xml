<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.account.wallet.dao.AccountUserOutMapper">
    <resultMap id="BaseResultMap" type="ytb.account.wallet.model.AccountUserOut">
        <id column="out_id" jdbcType="INTEGER" property="outId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="account_type" jdbcType="TINYINT" property="accountType"/>
        <result column="account_no" jdbcType="VARCHAR" property="accountNo"/>
        <result column="mobile_no" jdbcType="VARCHAR" property="mobileNo"/>
        <result column="bank_name" jdbcType="VARCHAR" property="bankName"/>
        <result column="branch_name" jdbcType="VARCHAR" property="branchName"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_default" jdbcType="BIT" property="isDefault"/>
        <result column="card_holder" jdbcType="VARCHAR" property="cardHolder"/>
        <result column="card_holder_id" jdbcType="VARCHAR" property="cardHolderId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    out_id, user_id, company_id, account_type, account_no, mobile_no, bank_name, branch_name, 
    status, create_time, is_default, card_holder, card_holder_id
  </sql>
    <select id="selectByExample" parameterType="ytb.account.wallet.model.AccountUserOutExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from account_user_out
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from account_user_out
        where out_id = #{outId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_user_out
    where out_id = #{outId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="ytb.account.wallet.model.AccountUserOutExample">
        delete from account_user_out
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="ytb.account.wallet.model.AccountUserOut">
    insert into account_user_out (out_id, user_id, company_id, 
      account_type, account_no, mobile_no, 
      bank_name, branch_name, status, 
      create_time, is_default, card_holder, 
      card_holder_id)
    values (#{outId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{accountType,jdbcType=TINYINT}, #{accountNo,jdbcType=VARCHAR}, #{mobileNo,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{branchName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDefault,jdbcType=BIT}, #{cardHolder,jdbcType=VARCHAR}, 
      #{cardHolderId,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="ytb.account.wallet.model.AccountUserOut" useGeneratedKeys="true"
            keyProperty="outId" keyColumn="out_id">
        insert into account_user_out
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outId != null">
                out_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="accountType != null">
                account_type,
            </if>
            <if test="accountNo != null">
                account_no,
            </if>
            <if test="mobileNo != null">
                mobile_no,
            </if>
            <if test="bankName != null">
                bank_name,
            </if>
            <if test="branchName != null">
                branch_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDefault != null">
                is_default,
            </if>
            <if test="cardHolder != null">
                card_holder,
            </if>
            <if test="cardHolderId != null">
                card_holder_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outId != null">
                #{outId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="accountType != null">
                #{accountType,jdbcType=TINYINT},
            </if>
            <if test="accountNo != null">
                #{accountNo,jdbcType=VARCHAR},
            </if>
            <if test="mobileNo != null">
                #{mobileNo,jdbcType=VARCHAR},
            </if>
            <if test="bankName != null">
                #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="branchName != null">
                #{branchName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDefault != null">
                #{isDefault,jdbcType=BIT},
            </if>
            <if test="cardHolder != null">
                #{cardHolder,jdbcType=VARCHAR},
            </if>
            <if test="cardHolderId != null">
                #{cardHolderId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="ytb.account.wallet.model.AccountUserOutExample" resultType="java.lang.Long">
        select count(*) from account_user_out
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update account_user_out
        <set>
            <if test="record.outId != null">
                out_id = #{record.outId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.companyId != null">
                company_id = #{record.companyId,jdbcType=INTEGER},
            </if>
            <if test="record.accountType != null">
                account_type = #{record.accountType,jdbcType=TINYINT},
            </if>
            <if test="record.accountNo != null">
                account_no = #{record.accountNo,jdbcType=VARCHAR},
            </if>
            <if test="record.mobileNo != null">
                mobile_no = #{record.mobileNo,jdbcType=VARCHAR},
            </if>
            <if test="record.bankName != null">
                bank_name = #{record.bankName,jdbcType=VARCHAR},
            </if>
            <if test="record.branchName != null">
                branch_name = #{record.branchName,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDefault != null">
                is_default = #{record.isDefault,jdbcType=BIT},
            </if>
            <if test="record.cardHolder != null">
                card_holder = #{record.cardHolder,jdbcType=VARCHAR},
            </if>
            <if test="record.cardHolderId != null">
                card_holder_id = #{record.cardHolderId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update account_user_out
        set out_id = #{record.outId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        company_id = #{record.companyId,jdbcType=INTEGER},
        account_type = #{record.accountType,jdbcType=TINYINT},
        account_no = #{record.accountNo,jdbcType=VARCHAR},
        mobile_no = #{record.mobileNo,jdbcType=VARCHAR},
        bank_name = #{record.bankName,jdbcType=VARCHAR},
        branch_name = #{record.branchName,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        is_default = #{record.isDefault,jdbcType=BIT},
        card_holder = #{record.cardHolder,jdbcType=VARCHAR},
        card_holder_id = #{record.cardHolderId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="ytb.account.wallet.model.AccountUserOut">
        update account_user_out
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=TINYINT},
            </if>
            <if test="accountNo != null">
                account_no = #{accountNo,jdbcType=VARCHAR},
            </if>
            <if test="mobileNo != null">
                mobile_no = #{mobileNo,jdbcType=VARCHAR},
            </if>
            <if test="bankName != null">
                bank_name = #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="branchName != null">
                branch_name = #{branchName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault,jdbcType=BIT},
            </if>
            <if test="cardHolder != null">
                card_holder = #{cardHolder,jdbcType=VARCHAR},
            </if>
            <if test="cardHolderId != null">
                card_holder_id = #{cardHolderId,jdbcType=VARCHAR},
            </if>
        </set>
        where out_id = #{outId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="ytb.account.wallet.model.AccountUserOut">
    update account_user_out
    set user_id = #{userId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      account_type = #{accountType,jdbcType=TINYINT},
      account_no = #{accountNo,jdbcType=VARCHAR},
      mobile_no = #{mobileNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_default = #{isDefault,jdbcType=BIT},
      card_holder = #{cardHolder,jdbcType=VARCHAR},
      card_holder_id = #{cardHolderId,jdbcType=VARCHAR}
    where out_id = #{outId,jdbcType=INTEGER}
  </update>
</mapper>