<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.account.wallet.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="ytb.account.wallet.model.UserInfo">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="company_user_id" jdbcType="INTEGER" property="companyUserId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="credit_grade" jdbcType="VARCHAR" property="creditGrade" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_flag" jdbcType="TINYINT" property="userFlag" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="idcard_photo1" jdbcType="VARCHAR" property="idcardPhoto1" />
    <result column="idcard_photo2" jdbcType="VARCHAR" property="idcardPhoto2" />
    <result column="self_eval" jdbcType="VARCHAR" property="selfEval" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="school_id" jdbcType="SMALLINT" property="schoolId" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="detailed_address" jdbcType="VARCHAR" property="detailedAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, company_user_id, nick_name, real_name, sex, birthday, credit_grade, email, 
    user_flag, status, idcard, idcard_photo1, idcard_photo2, self_eval, create_time, 
    school_id, user_address, area_id, province_id, city_id, update_time, detailed_address
  </sql>
  <select id="selectByExample" parameterType="ytb.account.wallet.model.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ytb_user.user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ytb_user.user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ytb_user.user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ytb.account.wallet.model.UserInfoExample">
    delete from ytb_user.user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ytb.account.wallet.model.UserInfo">
    insert into ytb_user.user_info (user_id, company_user_id, nick_name, 
      real_name, sex, birthday, 
      credit_grade, email, user_flag, 
      status, idcard, idcard_photo1, 
      idcard_photo2, self_eval, create_time, 
      school_id, user_address, area_id, 
      province_id, city_id, update_time, 
      detailed_address)
    values (#{userId,jdbcType=INTEGER}, #{companyUserId,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{creditGrade,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userFlag,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{idcard,jdbcType=VARCHAR}, #{idcardPhoto1,jdbcType=VARCHAR}, 
      #{idcardPhoto2,jdbcType=VARCHAR}, #{selfEval,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{schoolId,jdbcType=SMALLINT}, #{userAddress,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}, 
      #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{detailedAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ytb.account.wallet.model.UserInfo">
    insert into ytb_user.user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="companyUserId != null">
        company_user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="creditGrade != null">
        credit_grade,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userFlag != null">
        user_flag,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="idcardPhoto1 != null">
        idcard_photo1,
      </if>
      <if test="idcardPhoto2 != null">
        idcard_photo2,
      </if>
      <if test="selfEval != null">
        self_eval,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="detailedAddress != null">
        detailed_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="companyUserId != null">
        #{companyUserId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="creditGrade != null">
        #{creditGrade,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userFlag != null">
        #{userFlag,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="idcardPhoto1 != null">
        #{idcardPhoto1,jdbcType=VARCHAR},
      </if>
      <if test="idcardPhoto2 != null">
        #{idcardPhoto2,jdbcType=VARCHAR},
      </if>
      <if test="selfEval != null">
        #{selfEval,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=SMALLINT},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="detailedAddress != null">
        #{detailedAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ytb.account.wallet.model.UserInfoExample" resultType="java.lang.Long">
    select count(*) from ytb_user.user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ytb_user.user_info
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.companyUserId != null">
        company_user_id = #{record.companyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.creditGrade != null">
        credit_grade = #{record.creditGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userFlag != null">
        user_flag = #{record.userFlag,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardPhoto1 != null">
        idcard_photo1 = #{record.idcardPhoto1,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardPhoto2 != null">
        idcard_photo2 = #{record.idcardPhoto2,jdbcType=VARCHAR},
      </if>
      <if test="record.selfEval != null">
        self_eval = #{record.selfEval,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=SMALLINT},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.provinceId != null">
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.detailedAddress != null">
        detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ytb_user.user_info
    set user_id = #{record.userId,jdbcType=INTEGER},
      company_user_id = #{record.companyUserId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      credit_grade = #{record.creditGrade,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      user_flag = #{record.userFlag,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      idcard_photo1 = #{record.idcardPhoto1,jdbcType=VARCHAR},
      idcard_photo2 = #{record.idcardPhoto2,jdbcType=VARCHAR},
      self_eval = #{record.selfEval,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      school_id = #{record.schoolId,jdbcType=SMALLINT},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      area_id = #{record.areaId,jdbcType=INTEGER},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      detailed_address = #{record.detailedAddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ytb.account.wallet.model.UserInfo">
    update ytb_user.user_info
    <set>
      <if test="companyUserId != null">
        company_user_id = #{companyUserId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="creditGrade != null">
        credit_grade = #{creditGrade,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userFlag != null">
        user_flag = #{userFlag,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="idcardPhoto1 != null">
        idcard_photo1 = #{idcardPhoto1,jdbcType=VARCHAR},
      </if>
      <if test="idcardPhoto2 != null">
        idcard_photo2 = #{idcardPhoto2,jdbcType=VARCHAR},
      </if>
      <if test="selfEval != null">
        self_eval = #{selfEval,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=SMALLINT},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="detailedAddress != null">
        detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ytb.account.wallet.model.UserInfo">
    update ytb_user.user_info
    set company_user_id = #{companyUserId,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      credit_grade = #{creditGrade,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_flag = #{userFlag,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      idcard = #{idcard,jdbcType=VARCHAR},
      idcard_photo1 = #{idcardPhoto1,jdbcType=VARCHAR},
      idcard_photo2 = #{idcardPhoto2,jdbcType=VARCHAR},
      self_eval = #{selfEval,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      school_id = #{schoolId,jdbcType=SMALLINT},
      user_address = #{userAddress,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      detailed_address = #{detailedAddress,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>