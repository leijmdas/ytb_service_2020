<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.manager.charges.dao.ServiceFeeMapper">
  <resultMap id="BaseResultMap" type="ytb.manager.charges.model.ServiceFee">
    <id column="fee_id" jdbcType="INTEGER" property="feeId" />
    <result column="project_type" jdbcType="VARCHAR" property="projectType" />
    <result column="fee_rate" jdbcType="DECIMAL" property="feeRate" />
    <result column="lower_limit" jdbcType="INTEGER" property="lowerLimit" />
    <result column="upper_limit" jdbcType="INTEGER" property="upperLimit" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="describe_text" jdbcType="VARCHAR" property="describeText" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fee_id, project_type, fee_rate, lower_limit, upper_limit, state, describe_text, create_by, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="ytb.manager.charges.model.ServiceFeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from service_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service_fee
    where fee_id = #{feeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from service_fee
    where fee_id = #{feeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ytb.manager.charges.model.ServiceFeeExample">
    delete from service_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ytb.manager.charges.model.ServiceFee">
    insert into service_fee (fee_id, project_type, fee_rate, 
      lower_limit, upper_limit, state, 
      describe_text, create_by, create_time
      )
    values (#{feeId,jdbcType=INTEGER}, #{projectType,jdbcType=VARCHAR}, #{feeRate,jdbcType=DECIMAL}, 
      #{lowerLimit,jdbcType=INTEGER}, #{upperLimit,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{describeText,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="ytb.manager.charges.model.ServiceFee">
    insert into service_fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feeId != null">
        fee_id,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="feeRate != null">
        fee_rate,
      </if>
      <if test="lowerLimit != null">
        lower_limit,
      </if>
      <if test="upperLimit != null">
        upper_limit,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="describeText != null">
        describe_text,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feeId != null">
        #{feeId,jdbcType=INTEGER},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="feeRate != null">
        #{feeRate,jdbcType=DECIMAL},
      </if>
      <if test="lowerLimit != null">
        #{lowerLimit,jdbcType=INTEGER},
      </if>
      <if test="upperLimit != null">
        #{upperLimit,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="describeText != null">
        #{describeText,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ytb.manager.charges.model.ServiceFeeExample" resultType="java.lang.Long">
    select count(*) from service_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update service_fee
    <set>
      <if test="record.feeId != null">
        fee_id = #{record.feeId,jdbcType=INTEGER},
      </if>
      <if test="record.projectType != null">
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.feeRate != null">
        fee_rate = #{record.feeRate,jdbcType=DECIMAL},
      </if>
      <if test="record.lowerLimit != null">
        lower_limit = #{record.lowerLimit,jdbcType=INTEGER},
      </if>
      <if test="record.upperLimit != null">
        upper_limit = #{record.upperLimit,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.describeText != null">
        describe_text = #{record.describeText,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update service_fee
    set fee_id = #{record.feeId,jdbcType=INTEGER},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      fee_rate = #{record.feeRate,jdbcType=DECIMAL},
      lower_limit = #{record.lowerLimit,jdbcType=INTEGER},
      upper_limit = #{record.upperLimit,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      describe_text = #{record.describeText,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ytb.manager.charges.model.ServiceFee">
    update service_fee
    <set>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="feeRate != null">
        fee_rate = #{feeRate,jdbcType=DECIMAL},
      </if>
      <if test="lowerLimit != null">
        lower_limit = #{lowerLimit,jdbcType=INTEGER},
      </if>
      <if test="upperLimit != null">
        upper_limit = #{upperLimit,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="describeText != null">
        describe_text = #{describeText,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where fee_id = #{feeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ytb.manager.charges.model.ServiceFee">
    update service_fee
    set project_type = #{projectType,jdbcType=VARCHAR},
      fee_rate = #{feeRate,jdbcType=DECIMAL},
      lower_limit = #{lowerLimit,jdbcType=INTEGER},
      upper_limit = #{upperLimit,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      describe_text = #{describeText,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where fee_id = #{feeId,jdbcType=INTEGER}
  </update>
</mapper>