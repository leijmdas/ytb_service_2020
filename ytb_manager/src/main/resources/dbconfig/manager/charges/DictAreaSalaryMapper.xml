<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ytb.manager.charges.dao.DictAreaSalaryMapper">
  <resultMap id="BaseResultMap" type="ytb.manager.charges.model.DictAreaSalary">
    <id column="salary_id" jdbcType="INTEGER" property="salaryId" />
    <result column="version_id" jdbcType="VARCHAR" property="versionId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="audit_by" jdbcType="VARCHAR" property="auditBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    salary_id, version_id, area_id, salary, status, create_by, create_time, audit_time, 
    audit_by
  </sql>
  <select id="selectByExample" parameterType="ytb.manager.charges.model.DictAreaSalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_area_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dict_area_salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dict_area_salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ytb.manager.charges.model.DictAreaSalaryExample">
    delete from dict_area_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ytb.manager.charges.model.DictAreaSalary">
    insert into dict_area_salary (salary_id, version_id, area_id, 
      salary, status, create_by, 
      create_time, audit_time, audit_by
      )
    values (#{salaryId,jdbcType=INTEGER}, #{versionId,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}, 
      #{salary,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{createBy,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{auditTime,jdbcType=TIMESTAMP}, #{auditBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ytb.manager.charges.model.DictAreaSalary">
    insert into dict_area_salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        salary_id,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditBy != null">
        audit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        #{salaryId,jdbcType=INTEGER},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditBy != null">
        #{auditBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ytb.manager.charges.model.DictAreaSalaryExample" resultType="java.lang.Long">
    select count(*) from dict_area_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict_area_salary
    <set>
      <if test="record.salaryId != null">
        salary_id = #{record.salaryId,jdbcType=INTEGER},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditBy != null">
        audit_by = #{record.auditBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict_area_salary
    set salary_id = #{record.salaryId,jdbcType=INTEGER},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      area_id = #{record.areaId,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      audit_by = #{record.auditBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ytb.manager.charges.model.DictAreaSalary">
    update dict_area_salary
    <set>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditBy != null">
        audit_by = #{auditBy,jdbcType=VARCHAR},
      </if>
    </set>
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ytb.manager.charges.model.DictAreaSalary">
    update dict_area_salary
    set version_id = #{versionId,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=INTEGER},
      salary = #{salary,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_by = #{auditBy,jdbcType=VARCHAR}
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </update>
</mapper>